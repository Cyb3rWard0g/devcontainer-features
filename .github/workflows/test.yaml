name: CI - Feature Tests
on:
  pull_request:
  push:
    branches: [ main ]
    paths:
      - "src/**/*.sh"
      - "src/**/devcontainer-feature.json"
  workflow_dispatch:

env:
  BASE_IMAGES: |
    debian:latest
    ubuntu:latest
    mcr.microsoft.com/devcontainers/base:ubuntu
jobs:
  discover:
    runs-on: ubuntu-latest
    outputs:
      list: ${{ steps.collect.outputs.features }}
      images: ${{ steps.parse-images.outputs.images }}
    steps:
      - uses: actions/checkout@v4
      - name: Install jq
        run: apt-get update && apt-get install -y jq || true
      - id: collect
        run: |
          echo "features=$(ls -1 src | jq -R -s -c 'split("\n")[:-1]')" >> "$GITHUB_OUTPUT"
      - id: parse-images
        run: |
          # Convert multi-line env var to JSON array
          IMAGES_JSON=$(echo "$BASE_IMAGES" | jq -R -s 'split("\n") | map(select(length > 0))' -c)
          echo "images=$IMAGES_JSON" >> "$GITHUB_OUTPUT"
  autogenerated:
    needs: discover
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        feature: ${{ fromJson(needs.discover.outputs.list) }}
        image: ${{ fromJson(needs.discover.outputs.images) }}
    steps:
      - uses: actions/checkout@v4
      - name: "Install latest devcontainer CLI"
        run: npm install -g @devcontainers/cli
      - name: Test feature against base image
        run: devcontainer features test -f ${{ matrix.feature }} -i ${{ matrix.image }} .

  scenario:
    needs: discover
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        feature: ${{ fromJson(needs.discover.outputs.list) }}
    steps:
      - uses: actions/checkout@v4
      - name: "Install latest devcontainer CLI"
        run: npm install -g @devcontainers/cli
      - name: Test feature scenarios
        run: devcontainer features test -f ${{ matrix.feature }} --skip-autogenerated --skip-duplicated .

  global:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - id: check-global-scenarios
        run: |
          if [ -d "test/global-scenarios" ] && [ "$(ls -A test/global-scenarios 2>/dev/null)" ]; then
            echo "has_scenarios=true" >> $GITHUB_OUTPUT
          else
            echo "has_scenarios=false" >> $GITHUB_OUTPUT
          fi
      - name: "Install latest devcontainer CLI"
        run: npm install -g @devcontainers/cli
        if: steps.check-global-scenarios.outputs.has_scenarios == 'true'
      - name: Test global scenarios
        if: steps.check-global-scenarios.outputs.has_scenarios == 'true'
        run: devcontainer features test --global-scenarios-only .